--done-- start
  ✔  * make file to-do
  ✔  * make directories lib,public,test,database
  ✔  * init npm 
  ✔  * add node_modules and .nyc_output to .gitignore

--done-- add server
  ✔  * write server
  ✔  * write tests 

--done-- create homePage
  ✔  * home page of todo app --> index.html

----- REQUIREMENTS ------
1. Create one or more to-do list with a title
2. View all the to-do lists
3. Add an item to a to-do list
4. Delete an item from to-do list
5. Mark an item as done and undone
6. Delete a todo list
-------------------------

--done-- add serveTodo handler in server
  ✔  * write test for a get Handler that serves old todo data to client
  ✔  * on body load, fetch old todos to display on browser using xhr
  ✔  * fill todo template according to the todo data

--done-- add serveTask handler in server 
  ✔  * write test for a get Handler that serves old todo data to client
  ✔  * fill taskTemplate template with tasks of given id

--done-- write for a feature that enable todo app to save todos

--done-- Delete an item from to-do list
  ✔  * add test for checking the delete request flow
  ✔  * send XHR to delete todo item
  ✔  * handle delete request at server

--done-- Delete a todo from list
  ✔  * handle delete request at server
  ✔  * send XHR to delete todo item
  ✔  * add delete icon on todos

--done-- Mark tasks as done and undone
  ✔  * handle toggleStatus request at server
  ✔  * send XHR to toggleStatus of tasks

-------- REQUIREMENTS 2 -----------------

1. Edit title: Ability to edit their existing todo list title.
2. Edit tasks: Ability to edit their existing tasks.
3. Search by title:  Search the list by its title words.
4. Search by tasks: Search the todo item by its matched words.
5. User Todos: A user can log in and log out off their account and work on their own todos.
6. Home Page: If not logged in it is a login page else it is the user's todo page/dashboard.

-------------------------------------------------------------------------------------

add functionality to edit the existing task 
  ✔  * add edit logo 
  ✔  * send xhr to edit task
  ✔  * handle edit request at server

todo for tomorrow-------------
  ✔  * remove default.txt and change it into json
  ✔  * replace keyword delete with splice
  ✔  * add eslintrc
  ✔  * change task id generation
  ✔  * modify css class names
  ✔  * convert into single page website 
  ✔  * add callback function for those function that is sending requests
  * make gotoHome handler and remove location.reload()
  * debug the error of order change
  * write unit test 